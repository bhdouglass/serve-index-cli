#!/usr/bin/env node

var express = require('express');
var serveIndex = require('serve-index');
var minimist = require('minimist');
var recursive = require('recursive-readdir');
var path = require('path');
var fs = require('fs');

var args = minimist(process.argv.slice(2), {
    default: {
        port: 3000,
        ip: '127.0.0.1',
        title: 'Photo Gallery',
        dir: '.',
        icons: true,
        hidden: false,
        stylesheet: null,
        template: null,
        view: 'tiles',
        route: '/',
        'json-list': false,
    },
    booleans: ['icons', 'hidden', 'json-list'],
    alias: {
        p: 'port',
        i: 'ip',
        t: 'title',
        d: 'dir',
        v: 'view',
        r: 'route',
    }
});

function ignore(file, stats) {
    return file && !args.hidden && path.basename(file)[0] == '.';
}

var app = express();
if (args['json-list']) {
    app.get(path.join(args.route, 'list.json'), function(req, res) {
        recursive(args.dir, [ignore], function(err, files) {
            if (err) {
                console.error(err);

                res.status(500);
                res.send();
            }
            else {
                files.sort();
                var dir = path.resolve(args.dir);

                var list = [];
                files.forEach(function(file) {
                    file = path.resolve(file).replace(dir, '');
                    list.push(path.join(args.route, file));
                });

                res.json(list);
            }
        });
    });
}

app.use(args.route, serveIndex(args.dir, {
    icons: args.icons,
    hidden: args.hidden,
    stylesheet: args.stylesheet,
    template: args.template,
    view: args.view,
}))
app.use(args.route, express.static(args.dir));

app.listen(args.port, args.ip);
console.log('serve-index serving a directory index for "' + args.dir + '" on http://' + args.ip + ':' + args.port + args.route);
